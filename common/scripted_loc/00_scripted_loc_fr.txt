
#### WARNING : Ecrasé par FrenchTranslationPack.

############################################œ
###   SCRIPTED LOCALIZATION FOR FRENCH   ###
###      Scripted by Nicolas Fouqué      ###
############################################

###############################
###   Rulers / Dirigeants   ###
###############################
#Ex.: "Our ruler is [x ]King/Queen Someone XIV" => « Notre dirigeant est [le ]roi Machin XIV / [l']empereur Machin XIV / [la ]reine Machine XIV / [l']impératrice Machine XIV. » (lower case / minuscule)
defined_text = {
	name = GetLeLaLDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
			}
		}
		localization_key = FRLOC_le
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
			}
		}
		localization_key = FRLOC_la
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_l
	}
}
#Ex.: "[X ]King/Queen/Emperor/Empress Someone XIV is our ruler." => « [Le ]roi Machin XIV est notre dirigeant. / [La ]reine Machine XIV est notre dirigeante. / [L']empereur Machin XIV est notre dirigeant. / [L']imépratrice Machine XIV est notre dirigeante. » (upper case / majuscule)
defined_text = {
	name = GetLeLaLDirCap
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
			}
		}
		localization_key = FRLOC_Le
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
			}
		}
		localization_key = FRLOC_La
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_L
	}
}



#Ex.: "Someone XIV is [the] ruler of this empire." => « Machin XIV est [le] dirigeant de cet empire. / Machine XIV est [la] dirigeante de cet empire. » (lower case / minuscule)
defined_text = {
	name = GetLeLaFDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_le_x
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_la_x
	}
}
#Ex.: "[The] ruler of this empire is Someone XIV." => « [Le] dirigeant de cet empire c'est Machin XIV. / [La] dirigeante de cet empire c'est Machine XIV. » (upper case / majuscule)
defined_text = {
	name = GetLeLaFDirCap
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_Le_x
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_La_x
	}
}



#Ex.: "We are the servants [of the ]King/Emperor/Queen/Empress Someone XIV." => « Nous sommes les serviteurs [du ]roi Machin XIV / [de l']empereur Machin XIV / [de la ]reine Machine XIV / [de l']impératrice Machine XIV. » (lower case / minuscule)
defined_text = {
	name = GetDuDelaDelDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
			}
		}
		localization_key = FRLOC_du
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
			}
		}
		localization_key = FRLOC_dela
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_del
	}
}
#Ex.: "[From] King/Emperor/Queen/Empress Someone XIV came the best news." => « [Du ]roi Machin XIV / [De l']empereur Machin XIV / [De la ]reine Machine XIV / [De l']impératrice Machine XIV est venue la bonne nouvelle. » (upper case / majuscule)
defined_text = {
	name = GetDuDelaDelDirCap
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
			}
		}
		localization_key = FRLOC_Du
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
			}
		}
		localization_key = FRLOC_Dela
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_Del
	}
}



#Ex.: "We are the servants [of the] very wise King/Queen Someone XIV." => « Nous sommes les serviteurs [du] très sage roi Machin XIV / [de la] très sage reine Machine XIV. » (lower case / minuscule)
defined_text = {
	name = GetDuDelaFDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_du_x
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_dela_x
	}
}
#Ex.: "[From] King Someone XIV came the best news." => « [Du] roi Machin XIV / [De la] reine Machine XIV est venue la bonne nouvelle. » (upper case / majuscule)
defined_text = {
	name = GetDuDelaFDirCap
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_Du_x
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_Dela_x
	}
}



#Ex.: "We'll report that [to ]King/Queen Someone XIV." => « Nous le rapporterons [au ]roi Machin XIV / [à l']empereur Machin XIV / [à la ]reine Machine XIV / [à l']impératrice Machine XIV. » (lower case / minuscule)
defined_text = {
	name = GetAuAlaAlDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
			}
		}
		localization_key = FRLOC_au
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
			}
		}
		localization_key = FRLOC_ala
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_al
	}
}
#Ex.: "Deliverance belongs [to ]King/Queen Someone XIV." => « [Au ]roi Machin XIV / [À l']empereur Machin XIV / [À la ]reine Machine XIV / [À l']impératrice Machine XIV appartient le salut. » (upper case / majuscule)
defined_text = {
	name = GetAuAlaAlDirCap
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
			}
		}
		localization_key = FRLOC_Au
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
			}
		}
		localization_key = FRLOC_Ala
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_Al
	}
}



#Ex.: "We'll report that [to] the wise King/Queen Someone XIV." => « Nous le rapporterons [au] sage roi Machin XIV / [au] sage empereur Machin XIV / [à la] sage reine Machine XIV / [à la] sage impératrice Machine XIV. » (lower case / minuscule)
defined_text = {
	name = GetAuAlaFDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_au_x
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_ala_x
	}
}
#Ex.: "Deliverance belongs [to] the wise King/Queen Someone XIV." => « [Au] sage roi Machin XIV / [Au] sage empereur Machin XIV / [À la] sage reine Machine XIV / [À la] sage impératrice Machine XIV appartient le salut. » (upper case / majuscule)
defined_text = {
	name = GetAuAlaFDirCap
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_Au_x
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_Ala_x
	}
}



#Ex.: "It falls to you [as] ruler..." => « C'est à vous, en tant [que] roi/reine... / C'est à vous, en tant [qu'empereur/impératrice]... » (lower case / minuscule)
defined_text = {
	name = GetQueQuDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
			}
		}
		localization_key = FRLOC_que
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_qu
	}
}
#Ex.: "It falls to you [as] ruler..." => « C'est à vous, en tant [que] roi/reine... / C'est à vous, en tant [qu'empereur/impératrice]... » (lower case / minuscule)
defined_text = {
	name = GetQueQuDirCap
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
			}
		}
		localization_key = FRLOC_Que
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_Qu
	}
}



#Ex.: "Our elected ruler" => « Notre dirigeant(e) élu(e) »
defined_text = {
	name = GetXEDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_XX
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_e
	}
}



#Ex.: "Someone XIV is our [current] ruler." => « Machin XIV est notre actu[el] dirigeant. / Machine XIV est notre actu[elle] dirigeante. »
defined_text = {
	name = GetElElleDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_el
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_elle
	}
}



#Ex.: "[Esteemed] King Someone XIV..." => « Très ch[er] roi Machin XIV... / Très ch[ère] reine Machine XIV... »
defined_text = {
	name = GetErEreDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_er
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_ere
	}
}



#Ex.: "May King/Queen Someone XIV stay a [master/mistress] of his/her lesser." => « Puisse le roi Machin XIV rester le maître[x] de ses inférieurs. / Puisse la reine Machine XIV rester la maître[sse] de ses inférieurs. »
defined_text = {
	name = GetXSseDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_XX
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_sse
	}
}



#Ex.: "Is King/Queen Someone XIV a simple [servant]?" => « Le roi Machin XIV serait-il un simple [serviteur] ? / La reine Machine XIV serait-elle une simple [servante] ? »
defined_text = {
	name = GetServiteurServanteDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_serviteur
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_servante
	}
}



#Ex.: "Peace be with you, [Mister/Madam] Prime Minister" => « La paix soit avec vous, [Monsieur] le Premier Ministre / [Madame] le Premier Ministre » (lower case / minuscule)
defined_text = {
	name = GetMonsieurMadameDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_monsieur
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_madame
	}
}



#Ex.: "The empire and [their] King Someone XIV..." => « L'empire et [son] roi Machin XIV... / L'empire et [sa] reine Machine XIV... » (lower case / minuscule)
defined_text = {
	name = GetSonSaDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_son
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_sa
	}
}
#Ex.: "[Their] King Someone XIV led the empire to defeat." => « [Son] roi Machin XIV / [Sa] reine Machine XIV a mené l'empire à la défaite. » (upper case / majuscule)
defined_text = {
	name = GetSonSaDirCap
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_Son
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_Sa
	}
}



#Ex.: "Maybe this is too late yet, but [he]/[she] still did not take any decision. (= King/Queen Someone XIV)" => « Il est peut-être déjà trop tard, mais [il]/[elle] n'a toujours pas pris de décision. (= le roi Machin XIV / la reine Machine XIV) » (lower case / minuscule)
defined_text = {
	name = GetIlElleDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_il
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_elle
	}
}
#Ex.: "[He]/[She] decided it. (= King/Queen Someone XIV)" => « [Il]/[Elle] en a décidé ainsi. (= le roi Machin XIV / la reine Machine XIV) » (upper case / majuscule)
defined_text = {
	name = GetIlElleDirCap
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_Il
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_Elle
	}
}



#Ex.: "It's still uproven [if he/she] is a male or female alien. (= King/Queen Someone XIV)" => « On ne sait pas encore très bien [s'il]/[si elle] est un alien mâle ou femelle. (= le roi Machin XIV / la reine Machine XIV) » (lower case / minuscule)
defined_text = {
	name = GetSilSielleDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_sil
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_sielle
	}
}
#Ex.: "[If he/she] wishes so, the empire would support him/her. (= King/Queen Someone XIV)" => « [S'il]/[Si elle] le veut, l'empire le soutiendra. (= le roi Machin XIV / la reine Machine XIV) » (upper case / majuscule)
defined_text = {
	name = GetSilSielleDirCap
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_Sil
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_Sielle
	}
}



#Ex.: "It's [him]/[her] who decided it. (= King/Queen Someone XIV)" => « C'est [lui]/[elle] qui en a décidé ainsi. (= le roi Machin XIV / la reine Machine XIV) » (lower case / minuscule)
defined_text = {
	name = GetLuiElleDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_lui
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_elle
	}
}
#Ex.: "[Him]/[Her] who decided it, may he/she...? (= King/Queen Someone XIV)" => « [Lui]/[Elle] qui en a décidé ainsi, est-il/elle même capable de... ? (= le roi Machin XIV / la reine Machine XIV) » (upper case / majuscule)
defined_text = {
	name = GetLuiElleDirCap
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_Lui
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_Elle
	}
}



#Ex.: "... [let him]/[let her] do so (= King/Queen Someone XIV)" => « ... [que lui]/[qu'elle] le fasse. (= le roi Machin XIV / la reine Machine XIV) » (lower case / minuscule)
defined_text = {
	name = GetQueluiQuelleDir
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_quelui
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_quelle
	}
}
#Ex.: "[Let him]/[Let her] do so... (= King/Queen Someone XIV)" => « [Que lui]/[Qu'elle] fasse ainsi (= le roi Machin XIV / la reine Machine XIV) » (upper case / majuscule)
defined_text = {
	name = GetQueluiQuelleDirCap
	text = {
		trigger = {
			OR = {
				frloc_rulers_masc_cons = yes
				frloc_rulers_strange_angloalien_masc_cons = yes
				frloc_rulers_masc_vow = yes
				frloc_rulers_strange_angloalien_masc_vow = yes
			}
		}
		localization_key = FRLOC_Quelui
	}
	text = {
		trigger = {
			OR = {
				frloc_rulers_fem_cons = yes
				frloc_rulers_strange_angloalien_fem_cons = yes
				frloc_rulers_fem_vow = yes
				frloc_rulers_strange_angloalien_fem_vow = yes
			}
		}
		localization_key = FRLOC_Quelle
	}
}



###################################
###   Traditions / Traditions   ###
###################################

defined_text = {
	name = GetDiplomacyTraditionNameArticle
	text = {
		trigger = {
			owner = {
				OR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_inwards_perfection
					has_authority = auth_hive_mind
				}
			}
		}
		localization_key = FRLOC_d
	}
	text = {
		trigger = {
			owner = {
				NOR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_inwards_perfection
					has_authority = auth_hive_mind
					has_authority = auth_machine_intelligence
				}
			}
		}
		localization_key = FRLOC_de
	}
}



#####################################################################
###   GALACTIC COMMUNITY/EMPIRE // COMMUNAUTÉ/EMPIRE GALACTIQUE   ###
#####################################################################
# Based on scripted_loc/05_scripted_loc_nem.txt/GetGalCommunityOrGalImperium

# Ex.: "[the ]Galactic Community/Galactic Imperium" => « [la ]Communauté galactique / [l']Empire galactique » (lower case/minuscule)
defined_text = {
	name = GetLeLaLCommGalEmpGal
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = FRLOC_la
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = FRLOC_l
	}
}
# Ex.: "[The ]Galactic Community/Galactic Imperium" => « [La ]Communauté galactique / [L']Empire galactique » (upper case/majuscule)
defined_text = {
	name = GetLeLaLCommGalEmpGalCap
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = FRLOC_La
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = FRLOC_L
	}
}


# Ex.: "[of the ]Galactic Community/Galactic Imperium" => « [de la ]Communauté galactique / [de l']Empire galactique » (lower case/minuscule)
defined_text = {
	name = GetDuDelaDelCommGalEmpGal
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = FRLOC_dela
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = FRLOC_del
	}
}
# Ex.: "[Of the ]Galactic Community/Galactic Imperium" => « [De la ]Communauté galactique / [De l']Empire galactique » (upper case/majuscule)
defined_text = {
	name = GetDuDelaDelCommGalEmpGalCap
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = FRLOC_Dela
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = FRLOC_Del
	}
}


# Ex.: "[to the ]Galactic Community/Galactic Imperium" => « [à la ]Communauté galactique / [à l']Empire galactique » (lower case/minuscule)
defined_text = {
	name = GetAuAlaAlCommGalEmpGal
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = FRLOC_ala
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = FRLOC_al
	}
}
# Ex.: "[To the ]Galactic Community/Galactic Imperium" => « [À la ]Communauté galactique / [À l']Empire galactique » (upper case/majuscule)
defined_text = {
	name = GetAuAlaAlCommGalEmpGalCap
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = FRLOC_Ala
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = FRLOC_Al
	}
}


# Ex.: "[All] the Galactic Community/Galactic Imperium" => « Tout[e] la Communauté galactique / Tout[] l'Empire galactique » (lower case/minuscule)
defined_text = {
	name = GetXECommGalEmpGal
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = FRLOC_e
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = FRLOC_XX
	}
}



######################################
###   LIMITED USE / USAGE LIMITÉ   ###
######################################
defined_text = {
	name = GetAuteur
	text = {
		trigger = {
			OR = {
				has_country_flag = human_1
				has_country_flag = human_2
				is_human_species = yes
			}
		}
		localization_key = FRLOC_Moliere
	}
	text = {
		trigger = {
			NOR = {
				has_country_flag = human_1
				has_country_flag = human_2
				is_human_species = yes
			}
		}
		localization_key = FRLOC_XXZY
	}
}
defined_text = {
	name = GetPiece
	text = {
		trigger = {
			OR = {
				has_country_flag = human_1
				has_country_flag = human_2
				is_human_species = yes
			}
		}
		localization_key = FRLOC_Piece_Moliere
	}
	text = {
		trigger = {
			NOR = {
				has_country_flag = human_1
				has_country_flag = human_2
				is_human_species = yes
			}
		}
		localization_key = FRLOC_Piece_XXZY
	}
}


#### For modifiers
# e.g. mod_planet_technician_energy_produces_mult:1 "£energy£ $energy$ from £job_technician£ [GetTechnicians]"
# Used to make them say which job gets the bonus correctly where the same modifier applies to
# several equivalent jobs, such as Technicians and Technician Drones.
# Needs the scope valid checks and default fallback for e.g. galaxy setup, observer mode.

# Worker / Simple Drone # Dupliqué de GetWorker
defined_text = {
	name = GetWorker_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = pop_cat_worker_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = pop_cat_simple_drone_lower
	}
	default = pop_cat_worker_lower
}

# Workers / Simple Drones  # « Dupliqué » de GetWorkerPlural (manquant)
defined_text = {
	name = GetWorkerPlural_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = pop_cat_worker_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = pop_cat_simple_drone_plural_lower
	}
	default = pop_cat_worker_plural
}

# Specialist / Complex Drone # Dupliqué de GetSpecialist
defined_text = {
	name = GetSpecialist_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = pop_cat_specialist_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = pop_cat_complex_drone_lower
	}
	default = pop_cat_specialist_lower
}

# Specialists / Complex Drones # « Dupliqué » de GetSpecialistPlural (manquant)
defined_text = {
	name = GetSpecialistPlural_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = pop_cat_specialist_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = pop_cat_complex_drone_plural_lower
	}
	default = pop_cat_specialist_plural_lower
}

# Technician / Technician Drone # Dupliqué de GetTechnician
defined_text = {
	name = GetTechnician_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_technician_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_technician_drone_lower
	}
	default = job_technician_lower
}

# Technicians / Technician Drones # Dupliqué de GetTechnicianPlural
defined_text = {
	name = GetTechnicianPlural_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_technician_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_technician_drone_plural_lower
	}
	default = job_technician_plural_lower
}

defined_text = { # Dupliqué de EnergyProducer
	name = EnergyProducer_lower
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = { is_gestalt = yes }
		}
		localization_key = job_technician_drone_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_gestalt = no
				is_fallen_empire_spiritualist = no
			}
		}
		localization_key = job_technician_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = { is_fallen_empire_spiritualist = yes }
		}
		localization_key = job_fe_acolyte_generator_plural_lower
	}
}

# Miner / Mining Drone # Dupliqué de GetMiner
defined_text = {
	name = GetMiner_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_miner_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_mining_drone_lower
	}
	default = job_miner_lower
}

# Miners / Mining Drones # Dupliqué de GetMinerPlural
defined_text = {
	name = GetMinerPlural_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_miner_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_mining_drone_plural_lower
	}
	default = job_miner_plural_lower
}

defined_text = { # Dupliqué de MineralsProducer
	name = MineralsProducer_lower
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = { is_gestalt = yes }
		}
		localization_key = job_mining_drone_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_gestalt = no
				is_fallen_empire_spiritualist = no
			}
		}
		localization_key = job_miner_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = { is_fallen_empire_spiritualist = yes }
		}
		localization_key = job_fe_acolyte_mine_plural_lower
	}
}

# Farmer / Farming Drone # Dupliqué de GetFarmer
defined_text = {
	name = GetFarmer_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_anglers_empire = no
		}
		localization_key = job_farmer_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_agri_drone_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_gestalt = no
			is_anglers_empire = yes
		}
		localization_key = job_farmer_and_angler # No "_lower" needed / pas besoin de « _lower »
	}
	default = job_farmer_lower
}

# Farmers / Farming Drones # Dupliqué de GetFarmerPlural
defined_text = {
	name = GetFarmerPlural_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_anglers_empire = no
		}
		localization_key = job_farmer_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_agri_drone_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_gestalt = no
			is_anglers_empire = yes
		}
		localization_key = job_farmers_and_anglers # No "_lower" needed / pas besoin de « _lower »
	}
	default = job_farmer_plural_lower
}

# Soldier / Warrior Drone # Dupliqué de GetSoldier
defined_text = {
	name = GetSoldier_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_soldier_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_warrior_drone_lower
	}
	default = job_soldier_lower
}

# Soldiers / Warrior Drones # Dupliqué de GetSoldierPlural
defined_text = {
	name = GetSoldierPlural_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_soldier_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_warrior_drone_plural_lower
	}
	default = job_soldier_plural_lower
}

# Chemist / Chemist Drone # Manquant - dupliqué de GetChemistPlural
defined_text = {
	name = GetChemist_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_chemist_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_chemist_drone_lower
	}
	default = job_chemist_lower
}

# Chemists / Chemists Drones # Dupliqué de GetChemistPlural
defined_text = {
	name = GetChemistPlural_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_chemist_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_chemist_drone_plural_lower
	}
	default = job_chemist_plural_lower
}

defined_text = { # Dupliqué de FoodProducer
	name = FoodProducer_lower
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = { is_gestalt = yes }
		}
		localization_key = job_agri_drone_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet = {
				owner = {
					is_gestalt = no
					is_fallen_empire_spiritualist = no
					NAND = {
						has_valid_civic = civic_anglers
						PREV = { is_wet = yes }
					}
				}
			}
		}
		localization_key = job_farmer_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = { is_fallen_empire_spiritualist = yes }
		}
		localization_key = job_fe_acolyte_farm_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = { has_valid_civic = civic_anglers }
			planet = { is_wet = yes }
		}
		localization_key = job_angler_plural_lower
	}
}

# Metallurgist / others # Dupliqué de GetAlloyProducer
defined_text = {
	name = GetAlloyProducer_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_catalytic_empire = no
		}
		localization_key = job_foundry_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_catalytic_empire = yes
		}
		localization_key = job_catalytic_technician_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
			is_catalytic_empire = no
		}
		localization_key = job_fabricator_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_catalytic_empire = no
		}
		localization_key = job_alloy_drone_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_catalytic_empire = yes
		}
		localization_key = job_catalytic_drone_lower
	}
	default = job_foundry_lower
}

# Metallurgist / others # Dupliqué de GetAlloyProducerPlural
defined_text = {
	name = GetAlloyProducerPlural_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_catalytic_empire = no
		}
		localization_key = job_foundry_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_catalytic_empire = yes
		}
		localization_key = job_catalytic_technician_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
			is_catalytic_empire = no
		}
		localization_key = job_fabricator_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_catalytic_empire = no
		}
		localization_key = job_alloy_drone_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_catalytic_empire = yes
		}
		localization_key = job_catalytic_drone_plural_lower
	}
	default = job_foundry_plural_lower
}

defined_text = { # Dupliqué de AlloysProducer
	name = AlloysProducer_lower
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_regular_empire = yes
				is_catalytic_empire = no
			}
		}
		localization_key = job_foundry_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_hive_empire = yes
				is_catalytic_empire = no
			}
		}
		localization_key = job_alloy_drone_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_machine_empire = yes
				is_catalytic_empire = no
			}
		}
		localization_key = job_fabricator_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_regular_empire = yes
				is_catalytic_empire = yes
			}
		}
		localization_key = job_catalytic_technician_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_gestalt = yes
				is_catalytic_empire = yes
			}
		}
		localization_key = job_catalytic_drone_plural_lower
	}
}

# Researcher / others # Dupliqué de GetResearcher
defined_text = {
	name = GetResearcher_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_researcher_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
		}
		localization_key = job_brain_drone_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_calculator_lower
	}
	default = job_researcher_lower
}

# Researchers / others # Dupliqué de GetResearcherPlural
defined_text = {
	name = GetResearcherPlural_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_researcher_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
		}
		localization_key = job_brain_drone_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_calculator_plural_lower
	}
	default = job_researcher_plural_lower
}

defined_text = { # Dupliqué de ResearchProducer
	name = ResearchProducer_lower
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_regular_empire = yes
			}
		}
		localization_key = job_researcher_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_hive_empire = yes
			}
		}
		localization_key = job_brain_drone_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_machine_empire = yes
			}
		}
		localization_key = job_calculator_plural_lower
	}
}

# Artisan / others # Dupliqué de GetArtisan
defined_text = {
	name = GetArtisan_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_crafter_empire = no
		}
		localization_key = job_artisan_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_crafter_empire = yes
		}
		localization_key = job_artificer_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_artisan_drone_lower
	}
	default = job_artisan_lower
}

# Artisan / others # Dupliqué de GetArtisanPlural
defined_text = {
	name = GetArtisanPlural_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_crafter_empire = no
		}
		localization_key = job_artisan_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_crafter_empire = yes
		}
		localization_key = job_artificer_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_artisan_drone_plural_lower
	}
	default = job_artisan_plural_lower
}

defined_text = { # Dupliqué de AlloysProducerResources
	name = AlloysProducerResources_lower
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_catalytic_empire = no
			}
		}
		localization_key = r_minerals_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_catalytic_empire = yes
			}
		}
		localization_key = r_food_lower
	}
}

defined_text = { # Dupliqué de ConsumerGoodsProducer
	name = ConsumerGoodsProducer_lower
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_regular_empire = yes
				is_crafter_empire = no
			}
		}
		localization_key = job_artisan_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = {
				is_regular_empire = yes
				is_crafter_empire = yes
			}
		}
		localization_key = job_artificer_plural_lower
	}
	text = {
		trigger = {
			exists = planet.owner
			planet.owner = { is_gestalt = yes }
		}
		localization_key = job_artisan_drone_plural_lower
	}
}

# Priests / Death Priests # Dupliqué de GetPriest
defined_text = {
	name = GetPriest_lower
	text = {
		trigger = {
			is_scope_valid = yes
			NOR = {
				has_valid_civic = civic_death_cult
				has_valid_civic = civic_death_cult_corporate
			}
		}
		localization_key = job_priest_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			OR = {
				has_valid_civic = civic_death_cult
				has_valid_civic = civic_death_cult_corporate
			}
		}
		localization_key = job_death_priest_lower
	}
	default = job_priest_lower
}

# Priests / Death Priests # « Dupliqué » de GetPriestPlural (manquant)
defined_text = {
	name = GetPriestPlural_lower
	text = {
		trigger = {
			is_scope_valid = yes
			NOR = {
				has_valid_civic = civic_death_cult
				has_valid_civic = civic_death_cult_corporate
			}
		}
		localization_key = job_priest_plural_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			OR = {
				has_valid_civic = civic_death_cult
				has_valid_civic = civic_death_cult_corporate
			}
		}
		localization_key = job_death_priest_plural_lower
	}
	default = job_priest_plural_lower
}

defined_text = { # Dupliqué de Chemists
	name = Chemists_lower
	text = {
		trigger = {
			exists = owner
			owner = { is_gestalt = yes }
		}
		localization_key = job_chemist_drone_plural_lower
	}
	text = {
		trigger = {
			exists = owner
			owner = { is_gestalt = no }
		}
		localization_key = job_chemist_plural_lower
	}
}

defined_text = { # Dupliqué de Translucers
	name = Translucers_lower
	text = {
		trigger = {
			exists = owner
			owner = { is_gestalt = yes }
		}
		localization_key = job_translucer_drone_plural_lower
	}
	text = {
		trigger = {
			exists = owner
			owner = { is_gestalt = no }
		}
		localization_key = job_translucer_plural_lower
	}
}

defined_text = { # Dupliqué de Refiners
	name = Refiners_lower
	text = {
		trigger = {
			exists = owner
			owner = { is_gestalt = yes }
		}
		localization_key = job_gas_refiner_drone_plural_lower
	}
	text = {
		trigger = {
			exists = owner
			owner = { is_gestalt = no }
		}
		localization_key = job_gas_refiner_plural_lower
	}
}



defined_text = { # Dupliqué de SubjectResearcherUpkeep
	name = SubjectResearcherUpkeep_FR_lela
	text = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		localization_key = r_minerals_FR_lela
	}
	text = {
		trigger = {
			exists = owner
			owner = { is_machine_empire = yes }
		}
		localization_key = r_energy_FR_lela
	}
	text = {
		trigger = {
			exists = owner
			owner = {
				is_hive_empire = no
				is_machine_empire = no
			}
		}
		localization_key = r_consumer_goods_FR_lela
	}
}

defined_text = { # Dupliqué de OverlordConsumes
	name = OverlordConsumes_FR_lela
	text = {
		trigger = {
			exists = owner.overlord
			owner.overlord = { is_lithoid = yes }
		}
		localization_key = r_minerals_FR_lela
	}
	text = {
		trigger = {
			exists = owner.overlord
			owner.overlord = {
				OR = {
					is_machine_empire = yes
					is_mechanical_empire = yes
				}
			}
		}
		localization_key = r_energy_FR_lela
	}
	text = {
		trigger = {
			exists = owner.overlord
			owner.overlord = {
				is_lithoid = no
				is_machine_empire = no
				is_mechanical_empire = no
			}
		}
		localization_key = r_food_FR_lela
	}
}



#############################################
#   Pour les triomphes sur les léviathans   #
#############################################
# Dupliqué de GetLeviathanTargetName
defined_text = {
	name = GetLeviathanTargetName_DuDela_FR
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = leviathans_510_name_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = scripted_SHARD_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = leviathans_556_name_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = leviathans_550_name_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = leviathans_545_name_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = leviathans_520_name_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_dimensional_horror }
		localization_key = leviathans_525_name_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_elder_one }
		localization_key = scripted_ELDER_ONE_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_worm }
		localization_key = scripted_WORM_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = leviathans_540_name_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = leviathans_515_name_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = NAME_Scavenger_Bot_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = scripted_SKY_DRAGON_DuDela_FR
	}
}
defined_text = {
	name = GetLeviathanTargetName_LeLa_FR
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = leviathans_510_name_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = scripted_SHARD_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = leviathans_556_name_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = leviathans_550_name_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = leviathans_545_name_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = leviathans_520_name_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_dimensional_horror }
		localization_key = leviathans_525_name_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_elder_one }
		localization_key = scripted_ELDER_ONE_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_worm }
		localization_key = scripted_WORM_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = leviathans_540_name_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = leviathans_515_name_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = NAME_Scavenger_Bot_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = scripted_SKY_DRAGON_LeLa_FR
	}
}
defined_text = {
	name = GetLeviathanTargetName_LeLa_Cap_FR
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = leviathans_510_name_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = scripted_SHARD_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = leviathans_556_name_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = leviathans_550_name_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = leviathans_545_name_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = leviathans_520_name_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_dimensional_horror }
		localization_key = leviathans_525_name_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_elder_one }
		localization_key = scripted_ELDER_ONE_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_worm }
		localization_key = scripted_WORM_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = leviathans_540_name_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = leviathans_515_name_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = NAME_Scavenger_Bot_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = scripted_SKY_DRAGON_LeLa_Cap_FR
	}
}

# Dupliqué de GetTrophyName
defined_text = {
	name = GetTrophyName_LeLa_FR
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = drakes_scale_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = eye_of_the_shard_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = matriarchs_flagella_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = voidspawns_chitin_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = wraiths_energy_disperser_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = devourers_plasma_LeLa_FR
	}
	text = {
		trigger = { 
			OR = {
				has_situation_flag = celebration_dimensional_horror
				has_situation_flag = celebration_worm
				has_situation_flag = celebration_elder_one
			}
		}
		localization_key = horrific_inverse_mass_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = dreadnoughts_reactor_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = fortress_hull_plates_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = scavenger_bots_compactor_LeLa_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = sky_dragons_plume_LeLa_FR
	}
}
# Dupliqué de GetTrophyName
defined_text = {
	name = GetTrophyName_LeLa_Cap_FR
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = drakes_scale_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = eye_of_the_shard_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = matriarchs_flagella_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = voidspawns_chitin_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = wraiths_energy_disperser_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = devourers_plasma_LeLa_Cap_FR
	}
	text = {
		trigger = { 
			OR = {
				has_situation_flag = celebration_dimensional_horror
				has_situation_flag = celebration_worm
				has_situation_flag = celebration_elder_one
			}
		}
		localization_key = horrific_inverse_mass_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = dreadnoughts_reactor_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = fortress_hull_plates_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = scavenger_bots_compactor_LeLa_Cap_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = sky_dragons_plume_LeLa_Cap_FR
	}
}
defined_text = {
	name = GetTrophyName_DuDela_FR
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = drakes_scale_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = eye_of_the_shard_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = matriarchs_flagella_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = voidspawns_chitin_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = wraiths_energy_disperser_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = devourers_plasma_DuDela_FR
	}
	text = {
		trigger = { 
			OR = {
				has_situation_flag = celebration_dimensional_horror
				has_situation_flag = celebration_worm
				has_situation_flag = celebration_elder_one
			}
		}
		localization_key = horrific_inverse_mass_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = dreadnoughts_reactor_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = fortress_hull_plates_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = scavenger_bots_compactor_DuDela_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = sky_dragons_plume_DuDela_FR
	}
}
defined_text = {
	name = GetTrophyName_AuAla_FR
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = drakes_scale_AuAla_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = eye_of_the_shard_AuAla_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = matriarchs_flagella_AuAla_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = voidspawns_chitin_AuAla_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = wraiths_energy_disperser_AuAla_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = devourers_plasma_AuAla_FR
	}
	text = {
		trigger = { 
			OR = {
				has_situation_flag = celebration_dimensional_horror
				has_situation_flag = celebration_worm
				has_situation_flag = celebration_elder_one
			}
		}
		localization_key = horrific_inverse_mass_AuAla_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = dreadnoughts_reactor_AuAla_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = fortress_hull_plates_AuAla_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = scavenger_bots_compactor_AuAla_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = sky_dragons_plume_AuAla_FR
	}
}
# Dupliqué de GetTrophyName
defined_text = {
	name = GetTrophyName_XE_FR
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = drakes_scale_XE_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = eye_of_the_shard_XE_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = matriarchs_flagella_XE_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = voidspawns_chitin_XE_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = wraiths_energy_disperser_XE_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = devourers_plasma_XE_FR
	}
	text = {
		trigger = { 
			OR = {
				has_situation_flag = celebration_dimensional_horror
				has_situation_flag = celebration_worm
				has_situation_flag = celebration_elder_one
			}
		}
		localization_key = horrific_inverse_mass_XE_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = dreadnoughts_reactor_XE_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = fortress_hull_plates_XE_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = scavenger_bots_compactor_XE_FR
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = sky_dragons_plume_XE_FR
	}
}

# Dupliqué de GetParadeStudy
define_text = {
	name = GetParadeStudy_LaL_FR
	text = {
		trigger = { is_gestalt = no }
		localization_key = parade_LaL_FR
	}
	text = {
		trigger = { is_gestalt = yes }
		localization_key = study_LaL_FR
	}
}
define_text = {
	name = GetParadeStudy_LaL_Cap_FR
	text = {
		trigger = { is_gestalt = no }
		localization_key = parade_LaL_Cap_FR
	}
	text = {
		trigger = { is_gestalt = yes }
		localization_key = study_LaL_Cap_FR
	}
}
define_text = {
	name = GetParadeStudy_DelaDel_FR
	text = {
		trigger = { is_gestalt = no }
		localization_key = parade_DelaDel_FR
	}
	text = {
		trigger = { is_gestalt = yes }
		localization_key = study_DelaDel_FR
	}
}


# Dupliqué de GetSubMantleLower et GetSubMantleUpper
defined_text = {
	name = GetSubMantleLower_FR_ms
	text = {
		trigger = {
			NOT = { has_origin = origin_subterranean }
		}
		localization_key = submantle_sub_FR_ms
	}
	text = {
		trigger = {
			has_origin = origin_subterranean
		}
		localization_key = submantle_mantle_FR_ms
	}
}
defined_text = {
	name = GetSubMantleLower_FR_fs
	text = {
		trigger = {
			NOT = { has_origin = origin_subterranean }
		}
		localization_key = submantle_sub
	}
	text = {
		trigger = {
			has_origin = origin_subterranean
		}
		localization_key = submantle_mantle
	}
}
defined_text = {
	name = GetSubMantleLower_FR_mp
	text = {
		trigger = {
			NOT = { has_origin = origin_subterranean }
		}
		localization_key = submantle_sub_FR_mp
	}
	text = {
		trigger = {
			has_origin = origin_subterranean
		}
		localization_key = submantle_mantle_FR_mp
	}
}
defined_text = {
	name = GetSubMantleLower_FR_fp
	text = {
		trigger = {
			NOT = { has_origin = origin_subterranean }
		}
		localization_key = submantle_sub_FR_fp
	}
	text = {
		trigger = {
			has_origin = origin_subterranean
		}
		localization_key = submantle_mantle_FR_fp
	}
}

defined_text = {
	name = GetSubMantleUpper_FR_ms
	text = {
		trigger = {
			NOT = { has_origin = origin_subterranean }
		}
		localization_key = SubMantle_Sub_FR_ms
	}
	text = {
		trigger = {
			has_origin = origin_subterranean
		}
		localization_key = SubMantle_Mantle_FR_ms
	}
}
defined_text = {
	name = GetSubMantleUpper_FR_fs
	text = {
		trigger = {
			NOT = { has_origin = origin_subterranean }
		}
		localization_key = SubMantle_Sub
	}
	text = {
		trigger = {
			has_origin = origin_subterranean
		}
		localization_key = SubMantle_Mantle
	}
}
defined_text = {
	name = GetSubMantleUpper_FR_mp
	text = {
		trigger = {
			NOT = { has_origin = origin_subterranean }
		}
		localization_key = SubMantle_Sub_FR_mp
	}
	text = {
		trigger = {
			has_origin = origin_subterranean
		}
		localization_key = SubMantle_Mantle_FR_mp
	}
}
defined_text = {
	name = GetSubMantleUpper_FR_ms
	text = {
		trigger = {
			NOT = { has_origin = origin_subterranean }
		}
		localization_key = SubMantle_Sub_FR_fp
	}
	text = {
		trigger = {
			has_origin = origin_subterranean
		}
		localization_key = SubMantle_Mantle_FR_fp
	}
}

defined_text = { # Dupliqué de GetCrimeDeviancy
	name = GetCrimeDeviancy_lower
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = PLANET_CRIME_TITLE_lower
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = PLANET_CRIME_NO_HAPPINESS_TITLE_lower
	}
    default = PLANET_CRIME_TITLE_lower
}
